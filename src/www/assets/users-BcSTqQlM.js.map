{"version":3,"file":"users-BcSTqQlM.js","sources":["../../../../node_modules/lucide-react/dist/esm/icons/user-plus.js","../../src/pages/Users.tsx","../../src/routes/users.tsx?tsr-split=component"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"line\", { x1: \"19\", x2: \"19\", y1: \"8\", y2: \"14\", key: \"1bvyxn\" }],\n  [\"line\", { x1: \"22\", x2: \"16\", y1: \"11\", y2: \"11\", key: \"1shjgl\" }]\n];\nconst UserPlus = createLucideIcon(\"user-plus\", __iconNode);\n\nexport { __iconNode, UserPlus as default };\n//# sourceMappingURL=user-plus.js.map\n","import { useState } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Input } from '@/components/ui/input'\nimport { Search, UserPlus, Edit, Trash2, Users as UsersIcon } from 'lucide-react'\nimport { format } from 'date-fns'\nimport api from '@/lib/api'\n\ninterface User {\n  id: string\n  email: string\n  firstName: string\n  lastName: string\n  role: 'customer' | 'admin' | 'staff'\n  isActive: boolean\n  createdAt: string\n  updatedAt: string\n  _count?: {\n    orders: number\n  }\n}\n\nconst roleColors = {\n  customer: 'bg-blue-100 text-blue-800',\n  admin: 'bg-red-100 text-red-800',\n  staff: 'bg-green-100 text-green-800',\n}\n\nexport default function Users() {\n  const [searchTerm, setSearchTerm] = useState('')\n\n  const { data: users, isLoading } = useQuery({\n    queryKey: ['users', searchTerm],\n    queryFn: async () => {\n      const params = searchTerm ? { search: searchTerm } : {}\n      const response = await api.get('/admin/users', { params })\n      return response.data.users as User[]\n    },\n  })\n\n  const filteredUsers = users?.filter(user =>\n    user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    `${user.firstName} ${user.lastName}`.toLowerCase().includes(searchTerm.toLowerCase())\n  ) || []\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Users</h1>\n          <p className=\"text-muted-foreground\">\n            Manage customer accounts and permissions\n          </p>\n        </div>\n        <Button>\n          <UserPlus className=\"mr-2 h-4 w-4\" />\n          Add User\n        </Button>\n      </div>\n\n      {/* Search */}\n      <div className=\"flex items-center space-x-2\">\n        <div className=\"relative flex-1 max-w-sm\">\n          <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n          <Input\n            placeholder=\"Search users...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-8\"\n          />\n        </div>\n      </div>\n\n      {/* Users List */}\n      <div className=\"space-y-4\">\n        {filteredUsers.map((user) => (\n          <Card key={user.id}>\n            <CardHeader>\n              <div className=\"flex justify-between items-start\">\n                <div>\n                  <CardTitle className=\"text-lg\">\n                    {user.firstName} {user.lastName}\n                  </CardTitle>\n                  <CardDescription>\n                    {user.email}\n                  </CardDescription>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${roleColors[user.role]}`}>\n                    {user.role}\n                  </span>\n                  {!user.isActive && (\n                    <span className=\"px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n                      Inactive\n                    </span>\n                  )}\n                  <Button variant=\"ghost\" size=\"icon\">\n                    <Edit className=\"h-4 w-4\" />\n                  </Button>\n                  <Button variant=\"ghost\" size=\"icon\">\n                    <Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <h4 className=\"font-medium mb-2\">Account Info</h4>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Status: <span className=\"font-medium\">\n                      {user.isActive ? 'Active' : 'Inactive'}\n                    </span>\n                  </p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Role: <span className=\"font-medium capitalize\">{user.role}</span>\n                  </p>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-2\">Activity</h4>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Orders: {user._count?.orders || 0}\n                  </p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Joined: {format(new Date(user.createdAt), 'MMM dd, yyyy')}\n                  </p>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-2\">Last Updated</h4>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {format(new Date(user.updatedAt), 'MMM dd, yyyy HH:mm')}\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {filteredUsers.length === 0 && (\n        <Card>\n          <CardContent className=\"flex flex-col items-center justify-center py-12\">\n            <UsersIcon className=\"h-12 w-12 text-muted-foreground mb-4\" />\n            <h3 className=\"text-lg font-semibold mb-2\">No users found</h3>\n            <p className=\"text-muted-foreground text-center\">\n              {searchTerm\n                ? `No users match \"${searchTerm}\"`\n                : \"No users have registered yet\"}\n            </p>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}","import { createFileRoute } from '@tanstack/react-router'\nimport Users from '@/pages/Users'\n\nexport const Route = createFileRoute('/users')({\n  component: Users,\n})"],"names":["__iconNode","UserPlus","createLucideIcon","roleColors","Users","searchTerm","setSearchTerm","useState","users","isLoading","useQuery","params","api","filteredUsers","user","jsxDEV","Button","Search","Input","e","Card","CardHeader","CardTitle","CardDescription","Edit","Trash2","CardContent","format","UsersIcon","SplitComponent"],"mappings":"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","x_google_ignoreList":[0]}